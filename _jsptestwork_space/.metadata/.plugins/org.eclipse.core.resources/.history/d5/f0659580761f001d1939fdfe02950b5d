package controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import service.BoardService;
import service.BoardServiceImpl;

/**
 * Servlet implementation class BoardCtrl
 */
@WebServlet("/brd/*")
public class BoardCtrl extends HttpServlet {
	private static final long serialVersionUID = 1L;
	//로그기록 파일
	private static final Logger log = LoggerFactory.getLogger(BoardController.class);
	private String destPage;	//목적지 위치 기록
	private RequestDispatcher rdp;	//jsp에서 받은 요청을 처리하고, 다른 jsp로 결과를 보낸는 방식
	private BoardService bsv;	//아직 미구현시 빨간 밑줄 : 앞으로 생성할 예정 (service폴더 interface 생성 -> 저장)
	private int isUp;	//해당 구문이 잘 이루어졌는지 체크하기위한 값.   
    
    public BoardCtrl() {
        bsv = new BoardServiceImpl();
    }

	/**
	 * @see HttpServlet#service(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		res.setCharacterEncoding("utf-8");	//req,res encoding 설정
		res.setCharacterEncoding("utf-8");
		res.setContentType("text/html; charset=utf-8");
		
		
		String uri = req.getRequestURI(); // /brd/insert 주소를 uri로 받음.
		String path = uri.substring(uri.lastIndexOf("/")+1); //마지막 기능만 추출 insert
		
		//실제 controller 처리부분
		switch(path) {
		case "register":
			destPage = "/board/register.jsp";
			System.out.println(">>> path" + path);
			log.info(">>> path " + path);
			break;
		case "insert":
			try {
				String title = req.getParameter("title");
				String writer = req.getParameter("writer");
				String content = req.getParameter("content");
				System.out.println("check 1");
				System.out.println(">>> path " + path);
				isUp = bsv.register(new BoardVO(title, writer, content));
				destPage ="list";
			} catch (Exception e) {
				//insert 실패시 나오는 메시지
				e.printStackTrace();
				System.out.println("insert 실패");
			}
			break;
		case "list":
			try {
				List<BoardVO> list = bsv.getList();
				System.out.println("check 2-1");
				destPage = "/board/list.jsp";
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		case "detail":
			break;
		case "modify":
			break;
		case "update":
			break;
		case "remove":
			break;
		}
		
		rdp = req.getRequestDispatcher(destPage);
		rdp.forward(req, res); //요청과 응답을 받아서 보냄.
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}
